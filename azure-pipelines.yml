# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest
  
variables:
  - group: Blackduck
  
steps:
- task: BlackDuckSecurityScan@2.0.0
  displayName: 'Black Duck Scan'
  ### Configuration to set specific detect environment variables
  env:
    DETECT_PROJECT_NAME: 'webgoat-testScan-docs1'
  inputs:
    BLACKDUCKSCA_URL: $(BLACKDUCK_URL)
    BLACKDUCKSCA_TOKEN: $(BLACKDUCK_TOKEN)
    # BLACKDUCKSCA_SCAN_FULL: true
    
    ### Mandatory when BLACKDUCKSCA_PRCOMMENT_ENABLED or BLACKDUCKSCA_FIXPR_ENABLED is set true
    # AZURE_TOKEN: $(System.AccessToken)
    
    ### Pull Request Comments
    # BLACKDUCKSCA_PRCOMMENT_ENABLED: true
    
    ### Fix Pull Request creation
    # BLACKDUCKSCA_FIXPR_ENABLED: true
    
    ### SARIF report generation 
    # BLACKDUCKSCA_REPORTS_SARIF_CREATE: true
    
    ### Mark build status if policy violating issues are found
    # MARK_BUILD_STATUS: 'SucceededWithIssues'
    
  ### Uncomment below to use returned status in subsequent tasks if MARK_BUILD_STATUS is not set or set to FAILED
  # continueOnError: true

### Uncomment below configuration to add custom logic based on return status    
# - task: CmdLine@2
#   displayName: 'Command Line'
#   condition: not(eq(variables['BlackDuckSecurityScan.status'], '0'))
#   inputs:
#     script: |
#       echo Black Duck Security Scan exit status - $(BlackDuckSecurityScan.status)